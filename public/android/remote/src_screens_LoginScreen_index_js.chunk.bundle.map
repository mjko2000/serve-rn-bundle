{"version":3,"file":"src_screens_LoginScreen_index_js.chunk.bundle","mappings":"sLAAA,cAQA,cACA,WACA,cAKiC,wkBAEjC,IAgCE,GAEa,EAAAA,EAAAA,OAlCG,SAAH,GAAyC,IAEf,EAFrBC,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAAOC,EAAY,EAAZA,aAC7BC,GAAS,EAAAC,EAAAA,gBAAe,GACxBC,GAAiB,EAAAC,EAAAA,oBAAgB,aACrC,MAAO,CACLC,UAAWJ,EAAOK,MAEtB,GAAC,iBApBYL,GAAM,yOAqCnB,OAhBA,EAAAM,EAAAA,gBACEC,EAAAA,QAAMC,aAAY,WAChB,IAAMC,EAAmBC,EAAAA,SAASC,YAAY,mBAAmB,WAE/DX,EAAOK,OAAQ,EAAAO,EAAAA,aAAY,GAC7B,IACMC,EAAmBH,EAAAA,SAASC,YAAY,mBAAmB,WAC/DX,EAAOK,OAAQ,EAAAO,EAAAA,YAAW,EAC5B,IACA,OAAO,WACLZ,EAAOK,OAAQ,EAAAO,EAAAA,YAAW,GAC1BH,EAAiBK,SACjBD,EAAiBC,QACnB,CACF,GAAG,MAGH,SAAC,EAAAC,KAAI,CAACjB,MAAO,CAAC,CAACkB,OAAQC,EAAAA,WAAWC,IAAI,UAAUF,QAASlB,GAAO,UAC9D,SAAC,EAAAqB,yBAAwB,CAACrB,MAAO,CAACsB,KAAM,GAAIC,QAASX,EAAAA,SAASY,QAAQ,UACpE,SAAC,UAASP,KAAI,CAACjB,MAAO,CAACC,EAAcG,GAAgB,SAClDL,OAKX,IAE+B,W,0FCnD/B,cACA,EAAkC,4bAAlC,WAAkC,0IAElC,IAIM0B,EAASC,EAAAA,WAAWC,OAAO,CAC/BC,UAAW,CACTC,MAAO,OACPC,gBAAiB,YACjBZ,OAAQ,GACRa,aAAc,GACdC,UAAW,SACXC,kBAAmB,MAEpB,GAEY,EAAAnC,EAAAA,OAfG,WAChB,OAAO,SAAC,YAAW,CAACoC,YAAY,gBAAgBlC,MAAOyB,EAAOG,WAChE,IAa+B,W,yGClB/B,kBAEA,GADA,YACA,SASA,GAFA,YACA,YACA,aACA,cAA6C,WAe7C,IAAMH,EAASC,EAAAA,WAAWC,OAAO,CAC/BC,UAAW,CACTE,gBAAiB,QAEnB7B,aAAc,CACZqB,KAAM,EACNa,WAAY,SACZC,eAAgB,SAChBH,kBAAmB,IAErBI,eAAgB,CACdN,aAAc,EACdO,aAAc,IAEhBC,OAAQ,CACNN,kBAAmB,GACnBO,gBAAiB,MAElB,EA/BH,SAAqB,GAAe,IAAdC,EAAU,EAAVA,WACpB,OACE,UAAC,UAAS,CAACzC,MAAOyB,EAAOG,UAAW3B,aAAcwB,EAAOxB,aAAa,WACpE,SAAC,UAAS,KACV,SAAC,UAAM,CACLyC,MAAO,SACPnB,QAAS,kBAAMkB,EAAWE,SAAS,eAAe,KAEpD,SAAC,UAAM,CAACD,MAAM,OAAOnB,QAASkB,EAAWG,OAAQC,QAAQ,gBAG/D,EAsB2B,W","sources":["webpack:///./src/components/Container.js","webpack:///./src/components/TextInput.js","webpack:///./src/screens/LoginScreen/index.js"],"sourcesContent":["import {\n  View,\n  ScrollView,\n  Keyboard,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback,\n  Dimensions,\n} from 'react-native';\nimport React, {memo, useState} from 'react';\nimport {useFocusEffect} from '@react-navigation/native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  useValue,\n  withSpring,\n} from 'react-native-reanimated';\n\nconst Container = ({children, style, contentStyle}) => {\n  const offset = useSharedValue(0);\n  const animatedStyles = useAnimatedStyle(() => {\n    return {\n      marginTop: offset.value,\n    };\n  });\n  useFocusEffect(\n    React.useCallback(() => {\n      const showSubscription = Keyboard.addListener('keyboardDidShow', () => {\n        // setKeyboarShow(true);\n        offset.value = withSpring(-50);\n      });\n      const hideSubscription = Keyboard.addListener('keyboardDidHide', () => {\n        offset.value = withSpring(0);\n      });\n      return () => {\n        offset.value = withSpring(0);\n        showSubscription.remove();\n        hideSubscription.remove();\n      };\n    }, []),\n  );\n  return (\n    <View style={[{height: Dimensions.get('window').height}, style]}>\n      <TouchableWithoutFeedback style={{flex: 1}} onPress={Keyboard.dismiss}>\n        <Animated.View style={[contentStyle, animatedStyles]}>\n          {children}\n        </Animated.View>\n      </TouchableWithoutFeedback>\n    </View>\n  );\n};\n\nexport default memo(Container);\n","import {View, Text, TextInput as RNTextInput, StyleSheet} from 'react-native';\nimport React, {memo} from 'react';\n\nconst TextInput = () => {\n  return <RNTextInput placeholder=\"Tên đăng nhập\" style={styles.container} />;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    backgroundColor: '#FFFFFF70',\n    height: 46,\n    borderRadius: 23,\n    textAlign: 'center',\n    paddingHorizontal: 12,\n  },\n});\n\nexport default memo(TextInput);\n","import Button from '../../components/Button';\nimport React from 'react';\nimport {\n  Dimensions,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport LinearGradient from 'react-native-linear-gradient';\nimport colors from 'src/utils/colors';\nimport TextInput from 'components/TextInput';\nimport Container from 'components/Container';\n\nfunction LoginScreen({navigation}) {\n  return (\n    <Container style={styles.container} contentStyle={styles.contentStyle}>\n      <TextInput />\n      <Button\n        title={'SignUp'}\n        onPress={() => navigation.navigate('SignUpScreen')}\n      />\n      <Button title=\"Back\" onPress={navigation.goBack} variant=\"secondary\" />\n    </Container>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'blue',\n  },\n  contentStyle: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 12,\n  },\n  linearGradient: {\n    borderRadius: 5,\n    marginBottom: 12,\n  },\n  button: {\n    paddingHorizontal: 50,\n    paddingVertical: 12,\n  },\n});\n\nexport default LoginScreen;\n"],"names":["memo","children","style","contentStyle","offset","useSharedValue","animatedStyles","useAnimatedStyle","marginTop","value","useFocusEffect","React","useCallback","showSubscription","Keyboard","addListener","withSpring","hideSubscription","remove","View","height","Dimensions","get","TouchableWithoutFeedback","flex","onPress","dismiss","styles","StyleSheet","create","container","width","backgroundColor","borderRadius","textAlign","paddingHorizontal","placeholder","alignItems","justifyContent","linearGradient","marginBottom","button","paddingVertical","navigation","title","navigate","goBack","variant"],"sourceRoot":""}