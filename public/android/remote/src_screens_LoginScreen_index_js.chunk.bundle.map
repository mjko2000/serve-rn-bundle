{"version":3,"file":"src_screens_LoginScreen_index_js.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/Container.js","webpack:///./src/components/TextInput.js","webpack:///./src/screens/LoginScreen/index.js","webpack:///./src/utils/sizes.js"],"sourcesContent":["import {\n  View,\n  ScrollView,\n  Keyboard,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback,\n  Dimensions,\n  StyleSheet,\n} from 'react-native';\nimport React, {memo, useState} from 'react';\nimport {useFocusEffect} from '@react-navigation/native';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  useValue,\n  withSpring,\n} from 'react-native-reanimated';\n\nconst Container = ({children, style, contentStyle}) => {\n  const offset = useSharedValue(0);\n  const animatedStyles = useAnimatedStyle(() => {\n    return {\n      marginTop: offset.value,\n    };\n  });\n  useFocusEffect(\n    React.useCallback(() => {\n      const showSubscription = Keyboard.addListener('keyboardDidShow', () => {\n        // setKeyboarShow(true);\n        offset.value = withSpring(-100);\n      });\n      const hideSubscription = Keyboard.addListener('keyboardDidHide', () => {\n        offset.value = withSpring(0);\n      });\n      return () => {\n        offset.value = withSpring(0);\n        showSubscription.remove();\n        hideSubscription.remove();\n      };\n    }, []),\n  );\n  return (\n    <View style={[{height: Dimensions.get('window').height}, style]}>\n      <TouchableWithoutFeedback style={{flex: 1}} onPress={Keyboard.dismiss}>\n        <Animated.View\n          style={[styles.contentStyle, contentStyle, animatedStyles]}>\n          {children}\n        </Animated.View>\n      </TouchableWithoutFeedback>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentStyle: {\n    flex: 1,\n    width: '100%',\n  },\n});\n\nexport default memo(Container);\n","import {View, Text, TextInput as RNTextInput, StyleSheet} from 'react-native';\nimport React, {memo, useMemo} from 'react';\nimport sizes from 'src/utils/sizes';\n\nconst TextInput = ({name, placeholder, onChange, value, margin}) => {\n  const style = useMemo(\n    () => [styles.container, margin && styles.baseMargin],\n    [margin],\n  );\n  return (\n    <RNTextInput\n      placeholder={placeholder}\n      style={style}\n      onChangeText={onChange}\n      value={value || undefined}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    backgroundColor: '#FFFFFF70',\n    height: 46,\n    borderRadius: 23,\n    textAlign: 'center',\n    paddingHorizontal: 12,\n  },\n  baseMargin: {\n    marginBottom: sizes.baseMargin,\n  },\n});\n\nexport default memo(TextInput);\n","import Button from '../../components/Button';\nimport React, {useCallback, useState} from 'react';\nimport {StyleSheet} from 'react-native';\nimport TextInput from 'components/TextInput';\nimport Container from 'components/Container';\n\nfunction LoginScreen({navigation}) {\n  const [phone, setPhone] = useState('');\n  const onSignUp = useCallback(() => {\n    navigation.navigate('SignUpScreen');\n  }, []);\n  return (\n    <Container style={styles.container} contentStyle={styles.contentStyle}>\n      <TextInput\n        placeholder={'Số điện thoại'}\n        margin\n        onChange={setPhone}\n        value={phone}\n      />\n      <TextInput placeholder={'Mật khẩu'} margin />\n      <Button title={'SignUp'} onPress={onSignUp} margin />\n      <Button title=\"Back\" onPress={navigation.goBack} variant=\"secondary\" />\n    </Container>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'blue',\n  },\n  contentStyle: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 12,\n  },\n  linearGradient: {\n    borderRadius: 5,\n    marginBottom: 12,\n  },\n  button: {\n    paddingHorizontal: 50,\n    paddingVertical: 12,\n  },\n});\n\nexport default LoginScreen;\n","export default {\n  basePadding: 12,\n  baseMargin: 12\n};\n"],"names":["styles","StyleSheet","create","contentStyle","flex","width","memo","children","style","offset","useSharedValue","animatedStyles","useAnimatedStyle","marginTop","value","useFocusEffect","React","useCallback","showSubscription","Keyboard","addListener","withSpring","hideSubscription","remove","View","height","Dimensions","get","TouchableWithoutFeedback","onPress","dismiss","container","backgroundColor","borderRadius","textAlign","paddingHorizontal","baseMargin","marginBottom","sizes","name","placeholder","onChange","margin","useMemo","onChangeText","undefined","alignItems","justifyContent","linearGradient","button","paddingVertical","navigation","useState","phone","setPhone","onSignUp","navigate","title","goBack","variant","basePadding"],"sourceRoot":""}